// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SamuraiApp.Data;

#nullable disable

namespace SamuraiApp.Data.Migrations
{
    [DbContext(typeof(SamuraiContext))]
    [Migration("20220424042134_many2manyelemenpedang")]
    partial class many2manyelemenpedang
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SamuraiAppDomain.Elemen", b =>
                {
                    b.Property<int>("ElemenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ElemenId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ElemenId");

                    b.ToTable("Elemens");
                });

            modelBuilder.Entity("SamuraiAppDomain.ElemenPedang", b =>
                {
                    b.Property<int>("ElemenId")
                        .HasColumnType("int");

                    b.Property<int>("PedangId")
                        .HasColumnType("int");

                    b.HasKey("ElemenId", "PedangId");

                    b.HasIndex("PedangId");

                    b.ToTable("ElemenPedang");
                });

            modelBuilder.Entity("SamuraiAppDomain.Pedang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Berat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SamuraiId")
                        .HasColumnType("int");

                    b.Property<int>("Tahun")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SamuraiId");

                    b.ToTable("Pedangs");
                });

            modelBuilder.Entity("SamuraiAppDomain.Samurai", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Samurais");
                });

            modelBuilder.Entity("SamuraiAppDomain.ElemenPedang", b =>
                {
                    b.HasOne("SamuraiAppDomain.Elemen", null)
                        .WithMany()
                        .HasForeignKey("ElemenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SamuraiAppDomain.Pedang", null)
                        .WithMany()
                        .HasForeignKey("PedangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SamuraiAppDomain.Pedang", b =>
                {
                    b.HasOne("SamuraiAppDomain.Samurai", "Samurai")
                        .WithMany("Pedangs")
                        .HasForeignKey("SamuraiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Samurai");
                });

            modelBuilder.Entity("SamuraiAppDomain.Samurai", b =>
                {
                    b.Navigation("Pedangs");
                });
#pragma warning restore 612, 618
        }
    }
}
